// This file was generated by counterfeiter
package fake_spawner

import (
	"os"
	"os/exec"
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/container_daemon"
)

type FakeSpawner struct {
	SpawnStub        func(cmd *exec.Cmd, withTty bool) ([]*os.File, error)
	spawnMutex       sync.RWMutex
	spawnArgsForCall []struct {
		cmd     *exec.Cmd
		withTty bool
	}
	spawnReturns struct {
		result1 []*os.File
		result2 error
	}
}

func (fake *FakeSpawner) Spawn(cmd *exec.Cmd, withTty bool) ([]*os.File, error) {
	fake.spawnMutex.Lock()
	fake.spawnArgsForCall = append(fake.spawnArgsForCall, struct {
		cmd     *exec.Cmd
		withTty bool
	}{cmd, withTty})
	fake.spawnMutex.Unlock()
	if fake.SpawnStub != nil {
		return fake.SpawnStub(cmd, withTty)
	} else {
		return fake.spawnReturns.result1, fake.spawnReturns.result2
	}
}

func (fake *FakeSpawner) SpawnCallCount() int {
	fake.spawnMutex.RLock()
	defer fake.spawnMutex.RUnlock()
	return len(fake.spawnArgsForCall)
}

func (fake *FakeSpawner) SpawnArgsForCall(i int) (*exec.Cmd, bool) {
	fake.spawnMutex.RLock()
	defer fake.spawnMutex.RUnlock()
	return fake.spawnArgsForCall[i].cmd, fake.spawnArgsForCall[i].withTty
}

func (fake *FakeSpawner) SpawnReturns(result1 []*os.File, result2 error) {
	fake.SpawnStub = nil
	fake.spawnReturns = struct {
		result1 []*os.File
		result2 error
	}{result1, result2}
}

var _ container_daemon.Spawner = new(FakeSpawner)
