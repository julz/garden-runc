// This file was generated by counterfeiter
package fake_cmdpreparer

import (
	"os/exec"
	"sync"

	"github.com/cloudfoundry-incubator/garden"
	"github.com/cloudfoundry-incubator/garden-linux/container_daemon"
)

type FakeCmdPreparer struct {
	PrepareCmdStub        func(garden.ProcessSpec) (*exec.Cmd, error)
	prepareCmdMutex       sync.RWMutex
	prepareCmdArgsForCall []struct {
		arg1 garden.ProcessSpec
	}
	prepareCmdReturns struct {
		result1 *exec.Cmd
		result2 error
	}
}

func (fake *FakeCmdPreparer) PrepareCmd(arg1 garden.ProcessSpec) (*exec.Cmd, error) {
	fake.prepareCmdMutex.Lock()
	fake.prepareCmdArgsForCall = append(fake.prepareCmdArgsForCall, struct {
		arg1 garden.ProcessSpec
	}{arg1})
	fake.prepareCmdMutex.Unlock()
	if fake.PrepareCmdStub != nil {
		return fake.PrepareCmdStub(arg1)
	} else {
		return fake.prepareCmdReturns.result1, fake.prepareCmdReturns.result2
	}
}

func (fake *FakeCmdPreparer) PrepareCmdCallCount() int {
	fake.prepareCmdMutex.RLock()
	defer fake.prepareCmdMutex.RUnlock()
	return len(fake.prepareCmdArgsForCall)
}

func (fake *FakeCmdPreparer) PrepareCmdArgsForCall(i int) garden.ProcessSpec {
	fake.prepareCmdMutex.RLock()
	defer fake.prepareCmdMutex.RUnlock()
	return fake.prepareCmdArgsForCall[i].arg1
}

func (fake *FakeCmdPreparer) PrepareCmdReturns(result1 *exec.Cmd, result2 error) {
	fake.PrepareCmdStub = nil
	fake.prepareCmdReturns = struct {
		result1 *exec.Cmd
		result2 error
	}{result1, result2}
}

var _ container_daemon.CmdPreparer = new(FakeCmdPreparer)
