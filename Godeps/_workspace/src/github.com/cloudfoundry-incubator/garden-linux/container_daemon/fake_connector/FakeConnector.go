// This file was generated by counterfeiter
package fake_connector

import (
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/container_daemon"
	"github.com/cloudfoundry-incubator/garden-linux/container_daemon/unix_socket"
)

type FakeConnector struct {
	ConnectStub        func(msg interface{}) ([]unix_socket.Fd, int, error)
	connectMutex       sync.RWMutex
	connectArgsForCall []struct {
		msg interface{}
	}
	connectReturns struct {
		result1 []unix_socket.Fd
		result2 int
		result3 error
	}
}

func (fake *FakeConnector) Connect(msg interface{}) ([]unix_socket.Fd, int, error) {
	fake.connectMutex.Lock()
	fake.connectArgsForCall = append(fake.connectArgsForCall, struct {
		msg interface{}
	}{msg})
	fake.connectMutex.Unlock()
	if fake.ConnectStub != nil {
		return fake.ConnectStub(msg)
	} else {
		return fake.connectReturns.result1, fake.connectReturns.result2, fake.connectReturns.result3
	}
}

func (fake *FakeConnector) ConnectCallCount() int {
	fake.connectMutex.RLock()
	defer fake.connectMutex.RUnlock()
	return len(fake.connectArgsForCall)
}

func (fake *FakeConnector) ConnectArgsForCall(i int) interface{} {
	fake.connectMutex.RLock()
	defer fake.connectMutex.RUnlock()
	return fake.connectArgsForCall[i].msg
}

func (fake *FakeConnector) ConnectReturns(result1 []unix_socket.Fd, result2 int, result3 error) {
	fake.ConnectStub = nil
	fake.connectReturns = struct {
		result1 []unix_socket.Fd
		result2 int
		result3 error
	}{result1, result2, result3}
}

var _ container_daemon.Connector = new(FakeConnector)
