// This file was generated by counterfeiter
package fake_user

import (
	osuser "os/user"
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/container_daemon"
)

type FakeUser struct {
	LookupStub        func(name string) (*osuser.User, error)
	lookupMutex       sync.RWMutex
	lookupArgsForCall []struct {
		name string
	}
	lookupReturns struct {
		result1 *osuser.User
		result2 error
	}
}

func (fake *FakeUser) Lookup(name string) (*osuser.User, error) {
	fake.lookupMutex.Lock()
	fake.lookupArgsForCall = append(fake.lookupArgsForCall, struct {
		name string
	}{name})
	fake.lookupMutex.Unlock()
	if fake.LookupStub != nil {
		return fake.LookupStub(name)
	} else {
		return fake.lookupReturns.result1, fake.lookupReturns.result2
	}
}

func (fake *FakeUser) LookupCallCount() int {
	fake.lookupMutex.RLock()
	defer fake.lookupMutex.RUnlock()
	return len(fake.lookupArgsForCall)
}

func (fake *FakeUser) LookupArgsForCall(i int) string {
	fake.lookupMutex.RLock()
	defer fake.lookupMutex.RUnlock()
	return fake.lookupArgsForCall[i].name
}

func (fake *FakeUser) LookupReturns(result1 *osuser.User, result2 error) {
	fake.LookupStub = nil
	fake.lookupReturns = struct {
		result1 *osuser.User
		result2 error
	}{result1, result2}
}

var _ container_daemon.User = new(FakeUser)
